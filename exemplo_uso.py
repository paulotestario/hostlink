#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Exemplo de uso do AirbnbClimateScraper
Script para consultar pre√ßos do Hotel Mont Blanc em Itacuru√ß√° e verificar o clima
"""

from airbnb_scraper import AirbnbClimateScraper
from datetime import datetime, timedelta

def main():
    print("üèñÔ∏è Sistema de An√°lise de Pre√ßos - Hotel Mont Blanc Itacuru√ß√°")
    print("="*60)
    
    # Criar inst√¢ncia do scraper
    scraper = AirbnbClimateScraper()
    
    # Op√ß√£o 1: Usar datas espec√≠ficas (exemplo do usu√°rio)
    print("\nüìã Op√ß√£o 1: An√°lise para datas espec√≠ficas")
    checkin_especifico = "2025-08-08"
    checkout_especifico = "2025-08-10"
    
    print(f"Analisando: {checkin_especifico} a {checkout_especifico}")
    results1 = scraper.run_analysis(checkin_especifico, checkout_especifico, adults=2)
    
    print("\n" + "="*60)
    
    # Op√ß√£o 2: Pr√≥ximo final de semana
    print("\nüìã Op√ß√£o 2: An√°lise para o pr√≥ximo final de semana")
    
    today = datetime.now()
    
    # Calcular pr√≥xima sexta-feira
    days_until_friday = (4 - today.weekday()) % 7
    if days_until_friday == 0 and today.weekday() >= 4:  # Se hoje √© sexta, s√°bado ou domingo
        days_until_friday = 7  # Pr√≥xima sexta
    elif days_until_friday == 0:  # Se hoje √© antes de sexta
        days_until_friday = 4 - today.weekday()
    
    next_friday = today + timedelta(days=days_until_friday)
    next_sunday = next_friday + timedelta(days=2)
    
    checkin_weekend = next_friday.strftime('%Y-%m-%d')
    checkout_weekend = next_sunday.strftime('%Y-%m-%d')
    
    print(f"Analisando: {checkin_weekend} a {checkout_weekend}")
    results2 = scraper.run_analysis(checkin_weekend, checkout_weekend, adults=2)
    
    print("\n" + "="*60)
    print("\n‚úÖ An√°lise conclu√≠da!")
    print("\nüí° Dicas de uso:")
    print("   ‚Ä¢ Pre√ßos mais altos em finais de semana")
    print("   ‚Ä¢ Descontos aplicados em dias com alta probabilidade de chuva")
    print("   ‚Ä¢ Pre√ßos premium em dias ensolarados")
    print("   ‚Ä¢ Consulte sempre a previs√£o do tempo antes de definir pre√ßos")
    
    return results1, results2

def consulta_rapida(checkin, checkout, adultos=2):
    """
    Fun√ß√£o para consulta r√°pida de pre√ßos
    
    Args:
        checkin (str): Data de check-in no formato 'YYYY-MM-DD'
        checkout (str): Data de check-out no formato 'YYYY-MM-DD'
        adultos (int): N√∫mero de adultos
    
    Returns:
        list: Resultados da an√°lise
    """
    scraper = AirbnbClimateScraper()
    return scraper.run_analysis(checkin, checkout, adultos)

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("\n\n‚ùå Opera√ß√£o cancelada pelo usu√°rio")
    except Exception as e:
        print(f"\n\n‚ùå Erro durante a execu√ß√£o: {e}")
        print("\nüí° Verifique sua conex√£o com a internet e tente novamente")