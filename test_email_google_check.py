#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Teste da funcionalidade de verifica√ß√£o de email j√° usado com Google
"""

from database import get_database
from auth import User
import secrets
from werkzeug.security import generate_password_hash

def test_email_google_check():
    """
    Testa a verifica√ß√£o de email j√° usado com autentica√ß√£o Google
    """
    print("üß™ Testando verifica√ß√£o de email j√° usado com Google...")
    
    db = get_database()
    if not db:
        print("‚ùå Erro: N√£o foi poss√≠vel conectar ao banco de dados")
        return
    
    # Email de teste
    test_email = "teste.google@example.com"
    
    print(f"\n1. Verificando email '{test_email}' (deve retornar None se n√£o existir)")
    auth_type = db.check_email_auth_type(test_email)
    print(f"   Resultado: {auth_type}")
    
    # Simular cria√ß√£o de usu√°rio Google (apenas para teste)
    print(f"\n2. Simulando usu√°rio Google existente...")
    try:
        # Criar usu√°rio com Google ID (simulando login Google)
        google_user_id = db.save_user(
            google_id="123456789",
            email=test_email,
            name="Usu√°rio Teste Google",
            profile_pic=""
        )
        
        if google_user_id:
            print(f"   ‚úÖ Usu√°rio Google criado com ID: {google_user_id}")
            
            # Verificar tipo de autentica√ß√£o
            auth_type = db.check_email_auth_type(test_email)
            print(f"   Tipo de autentica√ß√£o detectado: {auth_type}")
            
            if auth_type == 'google':
                print("   ‚úÖ Verifica√ß√£o funcionando: Email detectado como Google")
            else:
                print(f"   ‚ùå Erro: Esperado 'google', obtido '{auth_type}'")
        else:
            print("   ‚ùå Erro ao criar usu√°rio Google")
            
    except Exception as e:
        print(f"   ‚ùå Erro ao testar usu√°rio Google: {e}")
    
    # Testar email n√£o existente
    print(f"\n3. Testando email n√£o existente...")
    non_existent_email = "naoexiste@example.com"
    auth_type = db.check_email_auth_type(non_existent_email)
    print(f"   Email '{non_existent_email}' - Tipo: {auth_type}")
    
    if auth_type is None:
        print("   ‚úÖ Verifica√ß√£o funcionando: Email n√£o encontrado")
    else:
        print(f"   ‚ùå Erro: Esperado None, obtido '{auth_type}'")
    
    # Testar email com autentica√ß√£o por senha
    print(f"\n4. Testando email com autentica√ß√£o por senha...")
    email_auth_email = "teste.email@example.com"
    
    try:
        # Criar usu√°rio com autentica√ß√£o por email
        password_hash = generate_password_hash("senha123")
        verification_token = secrets.token_urlsafe(32)
        
        email_user_id = db.create_email_user(
            email=email_auth_email,
            name="Usu√°rio Teste Email",
            password_hash=password_hash,
            verification_token=verification_token
        )
        
        if email_user_id:
            print(f"   ‚úÖ Usu√°rio email criado com ID: {email_user_id}")
            
            # Verificar tipo de autentica√ß√£o
            auth_type = db.check_email_auth_type(email_auth_email)
            print(f"   Tipo de autentica√ß√£o detectado: {auth_type}")
            
            if auth_type == 'email':
                print("   ‚úÖ Verifica√ß√£o funcionando: Email detectado como autentica√ß√£o por senha")
            else:
                print(f"   ‚ùå Erro: Esperado 'email', obtido '{auth_type}'")
        else:
            print("   ‚ùå Erro ao criar usu√°rio com autentica√ß√£o por email")
            
    except Exception as e:
        print(f"   ‚ùå Erro ao testar usu√°rio email: {e}")
    
    print("\nüéØ Cen√°rios de uso:")
    print("   - Se usu√°rio tentar registrar com email j√° usado no Google: Aviso para usar Google")
    print("   - Se usu√°rio tentar login por email/senha com email do Google: Aviso para usar Google")
    print("   - Se usu√°rio tentar registrar com email j√° usado por senha: Aviso de email j√° cadastrado")
    print("   - Se usu√°rio tentar login com email n√£o existente: Aviso de email n√£o encontrado")
    
    print("\n‚úÖ Teste conclu√≠do!")

if __name__ == "__main__":
    test_email_google_check()